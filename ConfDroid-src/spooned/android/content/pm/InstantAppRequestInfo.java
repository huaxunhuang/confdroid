/**
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package android.content.pm;


/**
 * Information exposed to {@link android.app.InstantAppResolverService} to complete
 * an instant application resolution request.
 *
 * @unknown 
 */
// @formatter:on
// End of generated code
@android.annotation.SystemApi
@com.android.internal.util.DataClass(genParcelable = true, genConstructor = true, genAidl = true, genGetters = true)
public final class InstantAppRequestInfo implements android.os.Parcelable {
    /**
     * The sanitized {@link Intent} used for resolution. A sanitized Intent is an intent with
     * potential PII removed from the original intent. Fields removed include extras and the
     * host + path of the data, if defined.
     */
    @android.annotation.NonNull
    private final android.content.Intent mIntent;

    /**
     * The hash prefix of the instant app's domain or null if no host is defined.
     */
    @android.annotation.Nullable
    private final int[] mHostDigestPrefix;

    /**
     * The user requesting the instant application
     */
    @android.annotation.NonNull
    private final android.os.UserHandle mUserHandle;

    /**
     * Whether or not the requesting package was an instant app itself
     */
    private final boolean mRequesterInstantApp;

    /**
     * A unique identifier
     */
    @android.annotation.NonNull
    private final java.lang.String mToken;

    // Code below generated by codegen v1.0.15.
    // 
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    // 
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/frameworks/base/core/java/android/content/pm/InstantAppRequestInfo.java
    // 
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    // Settings > Editor > Code Style > Formatter Control
    // @formatter:off
    /**
     * Creates a new InstantAppRequestInfo.
     *
     * @param intent
     * 		The sanitized {@link Intent} used for resolution. A sanitized Intent is an intent with
     * 		potential PII removed from the original intent. Fields removed include extras and the
     * 		host + path of the data, if defined.
     * @param hostDigestPrefix
     * 		The hash prefix of the instant app's domain or null if no host is defined.
     * @param userHandle
     * 		The user requesting the instant application
     * @param requesterInstantApp
     * 		Whether or not the requesting package was an instant app itself
     * @param token
     * 		A unique identifier
     */
    @com.android.internal.util.DataClass.Generated.Member
    public InstantAppRequestInfo(@android.annotation.NonNull
    android.content.Intent intent, @android.annotation.Nullable
    int[] hostDigestPrefix, @android.annotation.NonNull
    android.os.UserHandle userHandle, boolean requesterInstantApp, @android.annotation.NonNull
    java.lang.String token) {
        this.mIntent = intent;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, mIntent);
        this.mHostDigestPrefix = hostDigestPrefix;
        this.mUserHandle = userHandle;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, mUserHandle);
        this.mRequesterInstantApp = requesterInstantApp;
        this.mToken = token;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, mToken);
        // onConstructed(); // You can define this method to get a callback
    }

    /**
     * The sanitized {@link Intent} used for resolution. A sanitized Intent is an intent with
     * potential PII removed from the original intent. Fields removed include extras and the
     * host + path of the data, if defined.
     */
    @com.android.internal.util.DataClass.Generated.Member
    @android.annotation.NonNull
    public android.content.Intent getIntent() {
        return mIntent;
    }

    /**
     * The hash prefix of the instant app's domain or null if no host is defined.
     */
    @com.android.internal.util.DataClass.Generated.Member
    @android.annotation.Nullable
    public int[] getHostDigestPrefix() {
        return mHostDigestPrefix;
    }

    /**
     * The user requesting the instant application
     */
    @com.android.internal.util.DataClass.Generated.Member
    @android.annotation.NonNull
    public android.os.UserHandle getUserHandle() {
        return mUserHandle;
    }

    /**
     * Whether or not the requesting package was an instant app itself
     */
    @com.android.internal.util.DataClass.Generated.Member
    public boolean isRequesterInstantApp() {
        return mRequesterInstantApp;
    }

    /**
     * A unique identifier
     */
    @com.android.internal.util.DataClass.Generated.Member
    @android.annotation.NonNull
    public java.lang.String getToken() {
        return mToken;
    }

    @java.lang.Override
    @com.android.internal.util.DataClass.Generated.Member
    public void writeToParcel(@android.annotation.NonNull
    android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }
        byte flg = 0;
        if (mRequesterInstantApp)
            flg |= 0x8;

        if (mHostDigestPrefix != null)
            flg |= 0x2;

        dest.writeByte(flg);
        dest.writeTypedObject(mIntent, flags);
        if (mHostDigestPrefix != null)
            dest.writeIntArray(mHostDigestPrefix);

        dest.writeTypedObject(mUserHandle, flags);
        dest.writeString(mToken);
    }

    @java.lang.Override
    @com.android.internal.util.DataClass.Generated.Member
    public int describeContents() {
        return 0;
    }

    /**
     *
     *
     * @unknown 
     */
    /* package-private */
    @java.lang.SuppressWarnings({ "unchecked", "RedundantCast" })
    @com.android.internal.util.DataClass.Generated.Member
    InstantAppRequestInfo(@android.annotation.NonNull
    android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }
        byte flg = in.readByte();
        boolean requesterInstantApp = (flg & 0x8) != 0;
        android.content.Intent intent = ((android.content.Intent) (in.readTypedObject(this.CREATOR)));
        int[] hostDigestPrefix = ((flg & 0x2) == 0) ? null : in.createIntArray();
        android.os.UserHandle userHandle = ((android.os.UserHandle) (in.readTypedObject(UserHandle.CREATOR)));
        java.lang.String token = in.readString();
        this.mIntent = intent;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, mIntent);
        this.mHostDigestPrefix = hostDigestPrefix;
        this.mUserHandle = userHandle;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, mUserHandle);
        this.mRequesterInstantApp = requesterInstantApp;
        this.mToken = token;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, mToken);
        // onConstructed(); // You can define this method to get a callback
    }

    @com.android.internal.util.DataClass.Generated.Member
    @android.annotation.NonNull
    public static final android.os.Parcelable.Creator<android.content.pm.InstantAppRequestInfo> CREATOR = new android.os.Parcelable.Creator<android.content.pm.InstantAppRequestInfo>() {
        @java.lang.Override
        public android.content.pm.InstantAppRequestInfo[] newArray(int size) {
            return new android.content.pm.InstantAppRequestInfo[size];
        }

        @java.lang.Override
        public android.content.pm.InstantAppRequestInfo createFromParcel(@android.annotation.NonNull
        android.os.Parcel in) {
            return new android.content.pm.InstantAppRequestInfo(in);
        }
    };

    @DataClass.Generated(time = 1583964236162L, codegenVersion = "1.0.15", sourceFile = "frameworks/base/core/java/android/content/pm/InstantAppRequestInfo.java", inputSignatures = "private final @android.annotation.NonNull android.content.Intent mIntent\nprivate final @android.annotation.Nullable int[] mHostDigestPrefix\nprivate final @android.annotation.NonNull android.os.UserHandle mUserHandle\nprivate final  boolean mRequesterInstantApp\nprivate final @android.annotation.NonNull java.lang.String mToken\nclass InstantAppRequestInfo extends java.lang.Object implements [android.os.Parcelable]\n@com.android.internal.util.DataClass(genParcelable=true, genConstructor=true, genAidl=true, genGetters=true)")
    @java.lang.Deprecated
    private void __metadata() {
    }
}

