/**
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package android.content.pm;


/**
 *
 *
 * @unknown 
 */
// @formatter:on
// End of generated code
@com.android.internal.util.DataClass(genParcelable = true, genToString = true)
public final class ShortcutQueryWrapper extends android.content.pm.LauncherApps.ShortcutQuery implements android.os.Parcelable {
    public ShortcutQueryWrapper(android.content.pm.LauncherApps.ShortcutQuery query) {
        this();
        mChangedSince = query.mChangedSince;
        mPackage = query.mPackage;
        mLocusIds = query.mLocusIds;
        mShortcutIds = query.mShortcutIds;
        mActivity = query.mActivity;
        mQueryFlags = query.mQueryFlags;
    }

    public long getChangedSince() {
        return mChangedSince;
    }

    @android.annotation.Nullable
    public java.lang.String getPackage() {
        return mPackage;
    }

    @android.annotation.Nullable
    public java.util.List<android.content.LocusId> getLocusIds() {
        return mLocusIds;
    }

    @android.annotation.Nullable
    public java.util.List<java.lang.String> getShortcutIds() {
        return mShortcutIds;
    }

    @android.annotation.Nullable
    public android.content.ComponentName getActivity() {
        return mActivity;
    }

    public int getQueryFlags() {
        return mQueryFlags;
    }

    // Code below generated by codegen v1.0.14.
    // 
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    // 
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/frameworks/base/core/java/android/content/pm/ShortcutQueryWrapper.java
    // 
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    // Settings > Editor > Code Style > Formatter Control
    // @formatter:off
    @com.android.internal.util.DataClass.Generated.Member
    public ShortcutQueryWrapper() {
        // onConstructed(); // You can define this method to get a callback
    }

    @java.lang.Override
    @com.android.internal.util.DataClass.Generated.Member
    public java.lang.String toString() {
        // You can override field toString logic by defining methods like:
        // String fieldNameToString() { ... }
        return "ShortcutQueryWrapper { " + " }";
    }

    @java.lang.Override
    @com.android.internal.util.DataClass.Generated.Member
    public void writeToParcel(@android.annotation.NonNull
    android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }
        byte flg = 0;
        if (mPackage != null)
            flg |= 0x2;

        if (mShortcutIds != null)
            flg |= 0x4;

        if (mLocusIds != null)
            flg |= 0x8;

        if (mActivity != null)
            flg |= 0x10;

        dest.writeByte(flg);
        dest.writeLong(mChangedSince);
        if (mPackage != null)
            dest.writeString(mPackage);

        if (mShortcutIds != null)
            dest.writeStringList(mShortcutIds);

        if (mLocusIds != null)
            dest.writeParcelableList(mLocusIds, flags);

        if (mActivity != null)
            dest.writeTypedObject(mActivity, flags);

        dest.writeInt(mQueryFlags);
    }

    @java.lang.Override
    @com.android.internal.util.DataClass.Generated.Member
    public int describeContents() {
        return 0;
    }

    /**
     *
     *
     * @unknown 
     */
    /* package-private */
    @java.lang.SuppressWarnings({ "unchecked", "RedundantCast" })
    @com.android.internal.util.DataClass.Generated.Member
    ShortcutQueryWrapper(@android.annotation.NonNull
    android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }
        byte flg = in.readByte();
        long changedSince = in.readLong();
        java.lang.String pkg = ((flg & 0x2) == 0) ? null : in.readString();
        java.util.List<java.lang.String> shortcutIds = null;
        if ((flg & 0x4) != 0) {
            shortcutIds = new java.util.ArrayList<>();
            in.readStringList(shortcutIds);
        }
        java.util.List<android.content.LocusId> locusIds = null;
        if ((flg & 0x8) != 0) {
            locusIds = new java.util.ArrayList<>();
            in.readParcelableList(locusIds, android.content.LocusId.class.getClassLoader());
        }
        android.content.ComponentName activity = ((flg & 0x10) == 0) ? null : ((android.content.ComponentName) (in.readTypedObject(this.CREATOR)));
        int queryFlags = in.readInt();
        this.mChangedSince = changedSince;
        this.mPackage = pkg;
        this.mShortcutIds = shortcutIds;
        this.mLocusIds = locusIds;
        this.mActivity = activity;
        this.mQueryFlags = queryFlags;
        com.android.internal.util.AnnotationValidations.validate(android.content.pm.LauncherApps.ShortcutQuery.QueryFlags.class, null, mQueryFlags);
        // onConstructed(); // You can define this method to get a callback
    }

    @com.android.internal.util.DataClass.Generated.Member
    @android.annotation.NonNull
    public static final android.os.Parcelable.Creator<android.content.pm.ShortcutQueryWrapper> CREATOR = new android.os.Parcelable.Creator<android.content.pm.ShortcutQueryWrapper>() {
        @java.lang.Override
        public android.content.pm.ShortcutQueryWrapper[] newArray(int size) {
            return new android.content.pm.ShortcutQueryWrapper[size];
        }

        @java.lang.Override
        public android.content.pm.ShortcutQueryWrapper createFromParcel(@android.annotation.NonNull
        android.os.Parcel in) {
            return new android.content.pm.ShortcutQueryWrapper(in);
        }
    };

    @DataClass.Generated(time = 1582049937960L, codegenVersion = "1.0.14", sourceFile = "frameworks/base/core/java/android/content/pm/ShortcutQueryWrapper.java", inputSignatures = "public  long getChangedSince()\npublic @android.annotation.Nullable java.lang.String getPackage()\npublic @android.annotation.Nullable java.util.List<android.content.LocusId> getLocusIds()\npublic @android.annotation.Nullable java.util.List<java.lang.String> getShortcutIds()\npublic @android.annotation.Nullable android.content.ComponentName getActivity()\npublic  int getQueryFlags()\nclass ShortcutQueryWrapper extends android.content.pm.LauncherApps.ShortcutQuery implements [android.os.Parcelable]\n@com.android.internal.util.DataClass(genParcelable=true, genToString=true)")
    @java.lang.Deprecated
    private void __metadata() {
    }
}

