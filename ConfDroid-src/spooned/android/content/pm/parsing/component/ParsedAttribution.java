/**
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package android.content.pm.parsing.component;


/**
 * A {@link android.R.styleable#AndroidManifestAttribution &lt;attribution&gt;} tag parsed from the
 * manifest.
 *
 * @unknown 
 */
// @formatter:on
// End of generated code
@com.android.internal.util.DataClass(genAidl = false)
public class ParsedAttribution implements android.os.Parcelable {
    /**
     * Maximum length of attribution tag
     */
    public static final int MAX_ATTRIBUTION_TAG_LEN = 50;

    /**
     * Maximum amount of attributions per package
     */
    private static final int MAX_NUM_ATTRIBUTIONS = 1000;

    /**
     * Tag of the attribution
     */
    @android.annotation.NonNull
    public final java.lang.String tag;

    /**
     * User visible label fo the attribution
     */
    @android.annotation.StringRes
    public final int label;

    /**
     * Ids of previously declared attributions this attribution inherits from
     */
    @android.annotation.NonNull
    public final java.util.List<java.lang.String> inheritFrom;

    /**
     *
     *
     * @return Is this set of attributions a valid combination for a single package?
     */
    public static boolean isCombinationValid(@android.annotation.Nullable
    java.util.List<android.content.pm.parsing.component.ParsedAttribution> attributions) {
        if (attributions == null) {
            return true;
        }
        android.util.ArraySet<java.lang.String> attributionTags = new android.util.ArraySet(attributions.size());
        android.util.ArraySet<java.lang.String> inheritFromAttributionTags = new android.util.ArraySet();
        int numAttributions = attributions.size();
        if (numAttributions > android.content.pm.parsing.component.ParsedAttribution.MAX_NUM_ATTRIBUTIONS) {
            return false;
        }
        for (int attributionNum = 0; attributionNum < numAttributions; attributionNum++) {
            boolean wasAdded = attributionTags.add(attributions.get(attributionNum).tag);
            if (!wasAdded) {
                // feature id is not unique
                return false;
            }
        }
        for (int attributionNum = 0; attributionNum < numAttributions; attributionNum++) {
            android.content.pm.parsing.component.ParsedAttribution feature = attributions.get(attributionNum);
            int numInheritFrom = feature.inheritFrom.size();
            for (int inheritFromNum = 0; inheritFromNum < numInheritFrom; inheritFromNum++) {
                java.lang.String inheritFrom = feature.inheritFrom.get(inheritFromNum);
                if (attributionTags.contains(inheritFrom)) {
                    // Cannot inherit from a attribution that is still defined
                    return false;
                }
                boolean wasAdded = inheritFromAttributionTags.add(inheritFrom);
                if (!wasAdded) {
                    // inheritFrom is not unique
                    return false;
                }
            }
        }
        return true;
    }

    // Code below generated by codegen v1.0.14.
    // 
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    // 
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/frameworks/base/core/java/android/content/pm/parsing/component/ParsedAttribution.java
    // 
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    // Settings > Editor > Code Style > Formatter Control
    // @formatter:off
    @android.annotation.IntDef(prefix = "MAX_", value = { android.content.pm.parsing.component.ParsedAttribution.MAX_ATTRIBUTION_TAG_LEN, android.content.pm.parsing.component.ParsedAttribution.MAX_NUM_ATTRIBUTIONS })
    @java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy.SOURCE)
    @com.android.internal.util.DataClass.Generated.Member
    public @interface Max {}

    @com.android.internal.util.DataClass.Generated.Member
    public static java.lang.String maxToString(@android.content.pm.parsing.component.ParsedAttribution.Max
    int value) {
        switch (value) {
            case android.content.pm.parsing.component.ParsedAttribution.MAX_ATTRIBUTION_TAG_LEN :
                return "MAX_ATTRIBUTION_TAG_LEN";
            case android.content.pm.parsing.component.ParsedAttribution.MAX_NUM_ATTRIBUTIONS :
                return "MAX_NUM_ATTRIBUTIONS";
            default :
                return java.lang.Integer.toHexString(value);
        }
    }

    /**
     * Creates a new ParsedAttribution.
     *
     * @param tag
     * 		Tag of the attribution
     * @param label
     * 		User visible label fo the attribution
     * @param inheritFrom
     * 		Ids of previously declared attributions this attribution inherits from
     */
    @com.android.internal.util.DataClass.Generated.Member
    public ParsedAttribution(@android.annotation.NonNull
    java.lang.String tag, @android.annotation.StringRes
    int label, @android.annotation.NonNull
    java.util.List<java.lang.String> inheritFrom) {
        this.tag = tag;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, tag);
        this.label = label;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.StringRes.class, null, label);
        this.inheritFrom = inheritFrom;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, inheritFrom);
        // onConstructed(); // You can define this method to get a callback
    }

    @java.lang.Override
    @com.android.internal.util.DataClass.Generated.Member
    public void writeToParcel(@android.annotation.NonNull
    android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }
        dest.writeString(tag);
        dest.writeInt(label);
        dest.writeStringList(inheritFrom);
    }

    @java.lang.Override
    @com.android.internal.util.DataClass.Generated.Member
    public int describeContents() {
        return 0;
    }

    /**
     *
     *
     * @unknown 
     */
    @java.lang.SuppressWarnings({ "unchecked", "RedundantCast" })
    @com.android.internal.util.DataClass.Generated.Member
    protected ParsedAttribution(@android.annotation.NonNull
    android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }
        java.lang.String _tag = in.readString();
        int _label = in.readInt();
        java.util.List<java.lang.String> _inheritFrom = new java.util.ArrayList<>();
        in.readStringList(_inheritFrom);
        this.tag = _tag;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, tag);
        this.label = _label;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.StringRes.class, null, label);
        this.inheritFrom = _inheritFrom;
        com.android.internal.util.AnnotationValidations.validate(android.annotation.NonNull.class, null, inheritFrom);
        // onConstructed(); // You can define this method to get a callback
    }

    @com.android.internal.util.DataClass.Generated.Member
    @android.annotation.NonNull
    public static final android.os.Parcelable.Creator<android.content.pm.parsing.component.ParsedAttribution> CREATOR = new android.os.Parcelable.Creator<android.content.pm.parsing.component.ParsedAttribution>() {
        @java.lang.Override
        public android.content.pm.parsing.component.ParsedAttribution[] newArray(int size) {
            return new android.content.pm.parsing.component.ParsedAttribution[size];
        }

        @java.lang.Override
        public android.content.pm.parsing.component.ParsedAttribution createFromParcel(@android.annotation.NonNull
        android.os.Parcel in) {
            return new android.content.pm.parsing.component.ParsedAttribution(in);
        }
    };

    @DataClass.Generated(time = 1583436566499L, codegenVersion = "1.0.14", sourceFile = "frameworks/base/core/java/android/content/pm/parsing/component/ParsedAttribution.java", inputSignatures = "public static final  int MAX_ATTRIBUTION_TAG_LEN\nprivate static final  int MAX_NUM_ATTRIBUTIONS\npublic final @android.annotation.NonNull java.lang.String tag\npublic final @android.annotation.StringRes int label\npublic final @android.annotation.NonNull java.util.List<java.lang.String> inheritFrom\npublic static  boolean isCombinationValid(java.util.List<android.content.pm.parsing.component.ParsedAttribution>)\nclass ParsedAttribution extends java.lang.Object implements [android.os.Parcelable]\n@com.android.internal.util.DataClass(genAidl=false)")
    @java.lang.Deprecated
    private void __metadata() {
    }
}

